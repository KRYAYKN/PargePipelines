name: "Build and Deploy AL Application"

on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'feature/**'
      - 'promotion/**'
      - 'qa'
      - 'staging'
      - 'release/**'
      - 'prod'

permissions:
  contents: read

env:
  system_debug: true
  Build_StagingDirectory: ${{ github.workspace }}\Build\Staging
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true


jobs:
  build-and-deploy:
    runs-on: windows-latest
    environment: LocalizationSandbox
   

    steps:
      # Repository'yi Checkout Et
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: true

      # Docker Kurulumunu Kontrol Et
      - name: Check Docker Installation
        shell: pwsh
        run: |
          if (-Not (docker --version)) {
            Write-Host "Docker is not installed!"
            exit 1
          } else {
            Write-Host "Docker is installed and running."
          }

      # Docker Servisini Başlat
      - name: Start Docker Service
        shell: pwsh
        run: |
          Start-Service docker
          Write-Host "Docker service started successfully."

      # AL Uygulamasını Derle
      - name: Compile AL Application
        uses: ./.github/actions/compile-app
        with:
          containerName: ${{ vars.CONTAINERNAME }}
          artifactName: ${{ vars.ARTIFACTNAME }}
          BC_USERNAME: ${{ secrets.BC_USERNAME }}
          BC_PASSWORD: ${{ secrets.BC_PASSWORD }}
          LICENSE_FILE: ${{ secrets.LICENSE_FILE }}

      - name: Debug Staging Directory Content
        shell: pwsh
        run: |
          Write-Host "Checking Staging Directory Content:"
          Get-ChildItem -Path ${{ env.Build_StagingDirectory }}
  
      - name: Copy App to Artifacts Directory
        shell: pwsh
        run: |
          $stagingDirectory = "${{ env.Build_StagingDirectory }}"
          $artifactsDirectory = "${{ github.workspace }}\Artifacts"
  
          if (-Not (Test-Path -Path $artifactsDirectory)) {
              Write-Host "Artifacts directory does not exist. Creating: $artifactsDirectory"
              New-Item -ItemType Directory -Path $artifactsDirectory | Out-Null
          }
  
          Write-Host "Copying .app file from staging to artifacts directory..."
          $AppFile = Get-ChildItem -Path $stagingDirectory -Filter "*.app" | Select-Object -First 1
          if ($AppFile) {
              Copy-Item -Path $AppFile.FullName -Destination $artifactsDirectory -Force
              Write-Host "Copied .app file to Artifacts Directory: $($AppFile.FullName)"
          } else {
              Write-Host "No .app file found in staging directory: $stagingDirectory"
              exit 1
  
      - name: Debug Artifacts Directory Content
        shell: pwsh
        run: |
          $artifactsDirectory = "${{ github.workspace }}\Artifacts"
          Write-Host "Artifacts Directory Content:"
          Get-ChildItem -Path $artifactsDirectory    
 

      # AL Uygulamasını Yayınla
      - name: Publish AL Application
        uses: ./.github/actions/publish-app
        with:
          containerName: ${{ vars.CONTAINERNAME }}
          artifactName: ${{ vars.ARTIFACTNAME }}
          TENANT_ID: ${{ secrets.TENANT_ID }}
          REFRESHTOKEN: ${{ secrets.REFRESHTOKEN}}
          ENVIRONMENT: "LocalizationSandbox"

      # Derleme Artifaktlarını Yükle
      - name: Publish Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: ${{ env.Build_StagingDirectory }}
