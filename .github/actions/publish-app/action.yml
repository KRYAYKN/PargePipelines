name: Publish AL Application
description: Publish the AL application to a Business Central container.

inputs:
  containerName:
    description: The name of the Business Central container.
    required: true
  artifactName:
    description: The name of the artifact.
    required: true
  TENANT_ID:
    description: The tenant ID.
    required: true  
  ENVIRONMENT:
    description: The target Business Central environment (e.g., Sandbox or Production).
    required: true
  REFRESHTOKEN:
    description: The refresh token for authentication.
    required: true

runs:
  using: "composite"
  steps:
    - name: Ensure Artifacts Directory Exists
      shell: pwsh
      env:
        ArtifactsDirectory: ${{ github.workspace }}\Artifacts
      run: |
        if (-not (Test-Path -Path "$env:ArtifactsDirectory")) {
          Write-Host "Artifacts directory does not exist. Creating: $env:ArtifactsDirectory"
          New-Item -ItemType Directory -Path "$env:ArtifactsDirectory" | Out-Null
        } else {
          Write-Host "Artifacts directory exists: $env:ArtifactsDirectory"
        }

    - name: Publish Application
      shell: pwsh
      env:
        containerName: ${{ inputs.containerName }}
        artifactName: ${{ inputs.artifactName }}
        TENANT_ID: ${{ inputs.TENANT_ID }}
        REFRESHTOKEN: ${{ inputs.REFRESHTOKEN }}
        ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
        ArtifactsDirectory: ${{ github.workspace }}/Artifacts
      run: |
        # Install BcContainerHelper
        Install-Module -Name bccontainerhelper -Force
        $module = Get-InstalledModule -Name bccontainerhelper -ErrorAction Ignore
        Write-Host "BcContainerHelper $($module.Version.ToString()) installed"

        # Prepare variables
        $tenantID = $env:TENANT_ID
        $environment = $env:ENVIRONMENT
        $refreshToken = $env:REFRESHTOKEN
        $ArtifactsDirectory = $env:ArtifactsDirectory

        # Authentication
        $authContext = New-BcAuthContext -refreshToken $refreshToken -tenantID $tenantID

        # Locate .app file
        $AppFile = Get-ChildItem -Path $ArtifactsDirectory -Filter "*.app" | Select-Object -First 1
        if (-not $AppFile) {
            Write-Host "Error: No .app file found in $ArtifactsDirectory"
            exit 1
        }

        Write-Host "App file located: $($AppFile.FullName)"
        Write-Host "Publishing app to tenant: $tenantID, Environment: $environment"

        # Publish App
        Publish-PerTenantExtensionApps `
            -bcAuthContext $authContext `
            -environment $environment `
            -appFiles $AppFile.FullName `
            -schemaSyncMode Force